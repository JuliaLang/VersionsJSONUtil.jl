name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
  pull_request:

concurrency:
  # Skip intermediate builds: all builds except for builds on the `master` branch
  # Cancel intermediate builds: only pull request builds
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/main' || github.run_number }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

permissions:
  # Needed for `julia-actions/cache` to clear old caches
  actions: write
  contents: read

env:
  aws_region: us-east-1
  s3_bucket: julialang2

jobs:
  package-tests:
    name: Package tests - Julia ${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6"
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1

  full-test:
    name: Full test - Julia ${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 360
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6"
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - run: rm -f versions.json
      - name: Build versions.json
        run: julia --project=. 'using VersionJSONUtil; VersionsJSONUtil.main("versions.json")'
      - name: Validate versions.json against schema
        run: npx -p ajv-cli@3.3.0 ajv -s schema.json -d versions.json
      - name: Upload versions.json as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: versions
          path: versions.json
          if-no-files-found: error
          overwrite: true

  upload-to-s3:
    needs: [package-tests, full-test]
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Download versions.json from previous job
        uses: actions/download-artifact@v4
        with:
          name: versions

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_DEPLOY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEPLOY_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.aws_region }}

      - name: Upload versions.json to S3
        run: aws s3 cp versions.json s3://${{ env.s3_bucket }}/bin/versions.json --acl public-read --no-progress

      - name: Purge cache
        run: curl -X PURGE https://julialang-s3.julialang.org/bin/versions.json
